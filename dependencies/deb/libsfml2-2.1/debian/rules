#!/usr/bin/make -f
# -*- makefile -*-

export DH_VERBOSE=1

#include /usr/share/cdbs/1/rules/debhelper.mk

version=2.1
major=2

CFLAGS=-O2
MAKEFLAGS=-j2


%:
	dh $@

ifeq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
CC=gcc
CXX=g++
AR=ar
RANLIB=ranlib
else
CC=$(DEB_HOST_GNU_TYPE)-gcc
CXX=$(DEB_HOST_GNU_TYPE)-g++
AR=$(DEB_HOST_GNU_TYPE)-ar
RANLIB=$(DEB_HOST_GNU_TYPE)-ranlib
endif
ARCHDIR=$(DEB_HOST_MULTIARCH)

override_dh_auto_build:
	dh_testdir
	[ -d "SFML-2.1" ] || unzip SFML-2.1-sources.zip
	(cd SFML-2.1;patch -p1 < ../debian/sfml2-andre-static-dependencies.patch; patch -p1 < ../debian/sfml2-andre-user-install-libdir.patch)
	echo Building on $(DEB_BUILD_ARCH_CPU) for host $(DEB_HOST_ARCH_CPU)
	(cd SFML-2.1; \
	echo "set(CMAKE_SYSTEM_NAME Linux)" > cmake_toolchain_file && \
	echo "set(CMAKE_SYSTEM_VERSION 1)" >> cmake_toolchain_file && \
	echo "set(CMAKE_C_COMPILER $(CC))" >> cmake_toolchain_file && \
	echo "set(CMAKE_CXX_COMPILER $(CXX))" >> cmake_toolchain_file && \
	echo "set(CMAKE_FIND_ROOT_PATH /usr)" >> cmake_toolchain_file && \
	echo "set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)" >> cmake_toolchain_file && \
	echo "set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)" >> cmake_toolchain_file && \
	echo "set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)" >> cmake_toolchain_file)
	(cd SFML-2.1;cmake . -DCMAKE_INSTALL_PREFIX=/usr \
         -DCMAKE_INSTALL_LIBDIR=lib/$(ARCHDIR) \
	 -DCMAKE_INSTALL_INCLUDEDIR=include \
         -DBUILD_SHARED_LIBS=false -DCMAKE_TOOLCHAIN_FILE=cmake_toolchain_file \
         -DCMAKE_AR=$(shell which $(AR)) \
         -DCMAKE_RANLIB=$(shell which $(RANLIB)); make -j2 VERBOSE=1)
	touch $@

override_dh_auto_install: override_dh_auto_build
	dh_auto_install --destdir=debian/libsfml2-static --sourcedir=SFML-2.1
	mkdir -p debian/libsfml2-static/usr/lib/${ARCHDIR}/pkgconfig
	cp -f debian/sfml2-static.pc debian/libsfml2-static/usr/lib/$(ARCHDIR)/pkgconfig
	(cd debian/libsfml2-static/usr/include;mkdir SFML-static-2.0;mv SFML SFML-static-2.0)
	(cd debian/libsfml2-static/usr/share && rm -rf SFML && rm -rf doc)

clean::
	[ -d "SFML-2.1" ] && rm -rf "SFML-2.1" || true
	rm -f override_dh_auto_build
	dh clean
